 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura? 
    -954
 ** ¿Cuánto tiempo dura la captura? 
    -56.149345
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes? 
    -la maquina donde hemos efectuado la captura es 192.168.1.34 ya que es la maquina que esta durante toda la retransmision (statistics endpoints ipv4), sino tendriamos variedad de maquinas y no
    podriamos saber donde se hizo la captura.Sabemos que es una ip privada comprobando nuestra ip  con ifconfig en el terminal o ekiga.net/ip/, nos da nuestra ip publica al ver que no
    coinciden sabemos que estamos detras de un nat.


3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real? 
    -UDP es el protocolo con mayor numero de paquetes, udp es el protocolo que se utiliza para transmitir voz o video y resulta mas importante transmitir con velocidad que garantizar el envio      de   todos los bits, pero tcp es lo contrario garantiza el maximo intercambio de bits pr lo que el tiempo de transmision real no es un parametro que importe ya que la entrega debe ser garantizada
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
    -Dentro de Ethernet tenemos dos ARP e IPv4, éste a su vez tiene dentro 3 protocolos; TCP,UDP y ICMP. Dentro del protocolo TCP esta HTTP y dentro de UDP hay protocolos como; RTP, RTCP, DNS y SIP.



4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos? en 7, 14, 16, 38, 39 y 55 (statistics io graphs +)
 ** Y los paquetes con RTP, ¿cuándo se envían? en 17, 18, 19, 20, 21, 23 hasta 38 todos incluidos



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas? DNS
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga? 80.58.61.250
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
    -86.36.48.212
 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
    -resolucion DNS inversa, coge la direccion dada por el ekiga.net y ordena de izquierda a derecha la importancia de los bits menos significativos a mas


6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
    -protocolo http, hypertext transfer protocol,http://ekiga.net/ip/
 ** ¿Qué user agent (UA) la está pidiendo?
    -Ekiga
 ** ¿Qué devuelve el servidor?
    (segundo mensaje http, en hypertext transfer protocol, line-based textdata) 83.36.48.212
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
    -nos devuelve la direccion ip publica de nuestra maquina, con la que el sevidor nos ve


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
    -por  que el cliente esta tras un nat y necesita establecer una conexion con udp, para ello necesita  saber su ip publica
 ** ¿Estamos tras un NAT?
    -si


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
    -86.64.162.35
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
    -5063(dentro del mensaje)
 ** ¿Qué método SIP utiliza el UA para registrarse?
    -REGISTER
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
    (dentro del mensaje) INVITE, ACK, OPTIONS, BYE, CANCEL, NOTIFY, REFER, MESSAGE



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
    -no
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
    -Con la respuesta del servidor sip(mensaje 50),al no ser 200 ok y ser 401 unauthorized sabemos que el registro no se ha realizado correctamente
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
    la diferencia entre el mensaje 46 y 50, esque el 50 pesa mas que el primero por que dentro del mensaje tenemos un nuevo campo (authorization), en el primero el cliente no se puede autentificar y le manda un nonve value, el cliente tiene que mandar la respuesta habiendo aplicado al nonce su contraseña
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
    -mensaje 54, 3600


10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
    (mensaje 84 info: INVITE) si en el campo from
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está? protocolo sdp, dentro del message body, session description protocol  vemos el contenido de la llamada
    
 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
    -no ,mensaje 85, 407 proxy auhentication required, el servidor le pide al cliente la autentificacion del proxy
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
    pesa mas uno que otro, ya que contiene el campo proxy-authorization, ya que el servidor no identifica al proxy que utiliza el cliente.


11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
    se utiliza RTP,RTCPy H.261,  RTP se utiliza para enviar mensajes de audio y video,H.261 es una UIT-T estándar de compresión de vídeo y RTCP control de flujo de datos de RTP
 ** ¿Cuál es el tamaño de paquete de los mismos?
    214 bytes por paquete
 ** ¿Se utilizan bits de padding?
    no, mensaje 111 en campo rtp el padding es false 
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
    -G.711 manda 8000 muestras por segundo, en los mensajes de rtp como protocolo su campo de timestamp es de 160, por lo que manda 50 paquetes por segundo asique su periodo es de 0.02
 ** ¿Cuántos bits/segundo estamos enviando?
    85 600



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
    dos uno de audio puerto 5010 y video puerto 5014 (telephony rtp stream)
 ** ¿Cuántos paquetes se pierden?
    -ninguno
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta? video:1290.479ms audio:1290.444ms
    es la diferencia máxima  cuando comparamos el paquete recibido con el anterior
    
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
    -video medio:153.240ms y max :183.096
    -audio medio 42.500ms y max: 119.635
 a la variabilidad temporal durante el envío, es una mala conexion, el jitter medio ronda de 1-8ms al tener el jitter alto necesitamos un buffer mayor, por lo que el jiter cuando se acerca a cero es lo mas recomendable.

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
     -0 en ambos casos
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
    -no podemos afirmar que es el primer paquete que nos han enviado pero si el primero que hemos recibido el menor numero de paquete 
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
    -apartir del 247
 ** ¿A qué se debe el cambio tan brusco del jitter?
     - a que la delta tambien se ha producido un cambio brusco
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
    -si, el jitter es dependiente de la delta
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
    el jitter ha aumentado cuando la delta(el tiempo trancurrido desde el paquete anterior) ha aumentado


14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.(flow secuence)
 ** ¿Cuánto dura la conversación?
    -24.80289
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?(play stream)
    video(0x43306582),audio(0xbf4afd37), uno para video otro para audio no hay CSRCs


15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza? BYE
 ** ¿En qué trama(s)?924,925,927,933
 ** ¿Por qué crees que se envía varias veces? envia varios mensajes hasta que recibe el primer ok, ahi finaliza el envio de bye


16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
    para que borren al cliente
 ** ¿En qué trama sucede esto?
    950
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
    en el valor del expires, en este caso es cero



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
    -DNS si por que necesitamos saber la ip del servidor registrar de ekai.
    -stun no hace falta ya que el lab tienen IPs publicas, pero en un ordenador personal si haria falta ya que estamos detras de un nat
 ** ¿Son diferentes el registro y la descripción de la sesión?
    no, solo cambian las direcciones


18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
    dos flujos, los dos de audio
 ** ¿Cuál es su periodicidad?
    es la misma 0.02
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
    212.128.254.172(max 323.370,jittermax 47.430 jittermean 36.988)
    212.79.111.155(max 65.232, jittermax6.724,jitter mean 1.503)
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
    si , Telephony/RTP/Show ALL Streams, (elegimos el flujo),Analyze/Player
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?
    un servicio de musica


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
